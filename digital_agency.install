<?php

  function digital_agency_install() {

    $module_path = backdrop_get_path('module', 'digital_agency');
    $nodes = '';

    // Checking to see if "About" node still exists 
    $query = new EntityFieldQuery();
    $entities = $query->entityCondition('entity_type', 'node')
      ->propertyCondition('type', 'page')
      ->propertyCondition('title', 'About')
      ->propertyCondition('status', 1)
      ->range(0, 1)
      ->execute();

    if (!empty($entities['node'])) {
      $node_ids = array_keys($entities['node']);
      $about_nid = array_shift($node_ids);
      $about = node_load($about_nid);
      // If About page exists, unpublish it.
      if ($about) {
        $about->status = 0;
        node_save($about);
      }
    }

    // Checking to see if "About" node still exists 
    $query = new EntityFieldQuery();
    $entities = $query->entityCondition('entity_type', 'node')
      ->propertyCondition('type', 'page')
      ->propertyCondition('title', 'About')
      ->propertyCondition('status', 1)
      ->range(0, 1)
      ->execute();

    if (!empty($entities['node'])) {
      $node_ids = array_keys($entities['node']);
      $about_nid = array_shift($node_ids);
      $about = node_load($about_nid);
      // If About page exists, unpublish it.
      if ($about) {
        $about->status = 0;
        node_save($about);
      }
    }

    // Checking to see if "Your first post" node still exists
    $query = new EntityFieldQuery();
    $entities = $query->entityCondition('entity_type', 'node')
      ->propertyCondition('type', 'post')
      ->propertyCondition('title', 'Your first post!')
      ->propertyCondition('status', 1)
      ->range(0,1)
      ->execute();

    if (!empty($entities['node'])) {
      $node_ids = array_keys($entities['node']);
      $about_nid = array_shift($node_ids);
      $about = node_load($about_nid);
      // If About page exists, unpublish it.
      if ($about) {
        $about->status = 0;
        node_save($about);
      }
    }

    $fids = [];

    // Prepping images for blocks
    $field_image_dir = 'public://blocks';
    file_prepare_directory($field_image_dir, FILE_CREATE_DIRECTORY);
    $block_image = array(
      'office-chatgpt.webp',
      'philosophy-chatgpt.webp',
      'teamwork-chatgpt.webp',
      'faq-chatgpt.webp',
      'teamwork-flamingos.png',
    );

    foreach ($block_image as $image_filename) {
      $image_url = BACKDROP_ROOT . '/' . $module_path . '/' . 'images/'. $image_filename;
      $moved_file = file_unmanaged_copy($image_url, $field_image_dir);

      $file = entity_create('file', array(
        'filename' => $image_filename,
        'uri' => $moved_file,
        'uid' => 1,
      )); 

      $file->save();
      file_usage_add($file, 'file', 'file', $file->fid);
      $fids[] = $file->fid;
    }

    // Prepping images for news nodes
    $field_image_dir = 'public://news';
    file_prepare_directory($field_image_dir, FILE_CREATE_DIRECTORY);
    $news_image = array(
      'zeever-logo-chatgpt.webp',
      'zeever-open-source-chatgpt.webp',
      'first-post-chatgpt.webp',
      'simplo-dragon-chatgpt.webp',
    );
    
    foreach ($news_image as $image_filename) {
      $image_url = BACKDROP_ROOT . '/' . $module_path . '/' . 'images/'. $image_filename;
      $moved_file = file_unmanaged_copy($image_url, $field_image_dir);

      $file = entity_create('file', array(
        'filename' => $image_filename,
        'uri' => $moved_file,
        'uid' => 1,
      ));

      $file->save();
      $fids[] = $file->fid;
    }

    $nodes = array(
      'post_01' => array(
        'title' => st('Zeever: A new kind of theme.'),
        'body' => 'post_01',
        'type' => 'post',
        'promote' => '1',
        'fid' => $fids[5],
        'tags' => array('Backdrop CMS','Zeever','Themes'),
      ),
      'post_02' => array(
        'title' => st('Zeever is Open Source.'),
        'body' => 'post_02',
        'type' => 'post',
        'promote' => '1',
        'fid' => $fids[6],
        'tags' => array('Backdrop CMS','Open Source','Zeever'),
      ),
      'post_03' => array(
        'title' => st("Gettings Started"),
        'body' => 'post_03',
        'type' => 'post',
        'promote' => '1',
        'fid' => $fids[7],
        'tags' => array('User Experience','Open Source'),
      ),
      'post_04' => array(
        'title' => st("Visiting Simplo"),
        'body' => 'post_04',
        'type' => 'post',
        'promote' => '1',
        'fid' => $fids[8],
        'tags' => array('User Experience','Websites', 'Backdrop CMS'),
      ),
      'about' => array(
        'title' => st("About"),
        'body' => 'about',
        'type' => 'page',
        'promote' => '1',
        'tags' => array('User Experience','Websites', 'Backdrop CMS'),
      ),
    );

    // Creates an array of all new taxonomy terms
    $new_terms = array();
    foreach ($nodes as $node_info) {
      if (isset($node_info['tags']) && is_array($node_info['tags'])) {
        foreach ($node_info['tags'] as $tag) {
          if (!in_array($tag, $new_terms)) {
            array_push($new_terms, $tag);
          }
        }
      }
    }

    // Adds all new terms to 'tags' vocabulary
    foreach ($new_terms as $new_term) {
      $term = entity_create('taxonomy_term', array(
        'name' => $new_term,
        'vocabulary' => 'tags',
      ));
      taxonomy_term_save($term);
    }

    // Create new nodes
    foreach ($nodes as $info) {
      $content = file_get_contents($module_path . '/content/' . $info['body'] . '.txt');

      if ($info['type'] == 'post') {
        $node = new Node(
          array(
            'title' => $info['title'],
            'body' => array(
              LANGUAGE_NONE => array(
                array(
                  'value' => $content,
                  'format' => 'filtered_html',
                ),
              ),
            ),
            'field_image' => array(
              LANGUAGE_NONE => array(
                array(
                  'fid' => $info['fid'],
                ),
              ),
            ),
            'uid' => 1,
            'promote' => $info['promote'],
            'status' => 1,
            'type' => $info['type'],
            'field_image' => array(
              LANGUAGE_NONE => array(
                array(
                  'fid' => $info['fid'],
                ),
              ),
            ),
          ),
        );
      } else {
        $node = new Node(
          array(
            'title' => $info['title'],
            'body' => array(
              LANGUAGE_NONE => array(
                array(
                  'value' => $content,
                  'format' => 'filtered_html',
                ),
              ),
            ),
            'uid' => 1,
            'promote' => $info['promote'],
            'status' => 1,
            'type' => $info['type'],
          ),
        );
      }

      // Find tid for each new term and add term to node
      $term_key = 0;
      foreach ($info['tags'] as $post_tag) {
        $temp_tag = taxonomy_term_load_multiple_by_name($post_tag, 'tags');
        if (!empty($temp_tag)) {
          $term_tid = array_keys($temp_tag);
          $node->field_tags['und'][$term_key++]['tid'] = $term_tid[0];
        }
      }
      $node->save();
      // Create an "About" link in the main menu.
      if ($node->title == 'About') {
        $item = array(
          'link_path' => 'node/' . $node->nid,
          'link_title' => 'About',
          'weight' => 1,
        );
        menu_link_save($item);
        // $about_mlid = $item['mlid'];
        // While here, fix the about alias
        $about = node_load($node->nid);
        $about->path['auto'] = FALSE;
        $about->path['alias'] = 'new-about';
        $about->save();
      }
      // Update the menu router information.
      menu_rebuild();
    }

    // END new nodes section

    // Changes to Home Layout

    $home_layout = layout_load('home');
    //Remove Primary Menu Block
    $home_layout->removeBlock('9aece1df-ac4f-44a6-8b0c-12a7f6a1fb21');
    // Remove Promoted Cards Block
    $home_layout->removeBlock('fe8c7715-c7e9-46d0-8b09-09afb78b2891');
    // Remove Promoted Content Block
    $home_layout->removeBlock('578243cf-a4c8-46ad-9504-04aaf4ec9ccc');

    // Remove Powered By block and then replace it later. Change order of blocks.
    $home_layout->removeBlock('d6903155-4ad7-46d3-9300-e628fd337f06');
    // Remove Messages block and then replace it later. Change order of blocks.
    $home_layout->removeBlock('6a46fd7b-646b-4c91-9d03-034e630a2135');

    // Add a news block on bottom of front page
    $news_block = $home_layout->addBlock('views', 'news_block-block', 'bottom');
    // Add mini-layout to footer on front page, save block details to add block
    // to other pages later.
    $home_block = $home_layout->addBlock('mini_layouts', 'footer_mini_layout', 'footer');
    $iiv_block = $home_layout->addBlock('iivblock', 'faq_block', 'bottom');
    // Add "about" block and save block details to add additional config changes to block
    // afterwards.
    $igb1_block = $home_layout->addBlock('image_grid_block', 'about_block_with_images', 'bottom');   

    // Remove portfolio block provided by recipe to add a different one.
    foreach ($home_layout->content as $block_id => $block_info) {
      if ($block_info->delta == 'portfolio_projects-block_1') {
        $home_layout->removeBlock($block_info->uuid);
      }
    }

    // Remove Service block provided by recipe to add a different one.
    foreach ($home_layout->content as $block_id => $block_info) {
      if ($block_info->delta == 'services-block_1') {
        $home_layout->removeBlock($block_info->uuid);
      }
    }

    $home_layout->addBlock('system', 'powered-by', 'footer');
    $home_layout->addBlock('system', 'page_components:messages', 'content');
    $home_layout->addBlock('views', 'services-block_1', 'content');
    $projects_home_block = $home_layout->addBlock('views', 'portfolio_projects-block', 'content');

    $home_layout->save();

    // Config changes to Home layout
    config_set('layout.layout.home', 'content.' . $igb1_block->uuid . '.data.settings.label', 'About Block with Images');
    config_set('layout.layout.home', 'content.' . $igb1_block->uuid . '.data.settings.machine_name', 'about_block_with_images');
    config_set('layout.layout.home', 'content.' . $igb1_block->uuid . '.data.settings.title', 'About');
    config_set('layout.layout.home', 'content.' . $igb1_block->uuid . '.data.settings.title_display', 'custom');

    config_set('layout.layout.home', 'content.' . $iiv_block->uuid . '.data.settings.label', 'FAQ Block');
    config_set('layout.layout.home', 'content.' . $iiv_block->uuid . '.data.settings.machine_name', 'faq_block');
    config_set('layout.layout.home', 'content.' . $iiv_block->uuid . '.data.settings.title', '');
    config_set('layout.layout.home', 'content.' . $iiv_block->uuid . '.data.settings.title_display', 'none');

    // Adding correct file id's to our about block.
    config_set('image_grid_block.block.about_block_with_images', 'image_1', $fids[0]);
    config_set('image_grid_block.block.about_block_with_images', 'image_2', $fids[1]);
    config_set('image_grid_block.block.about_block_with_images', 'image_3', $fids[2]);
    config_set('iivblock.block.faq_block', 'image', $fids[3]);

    // Changes to Default Layout

    $default_layout = layout_load('default');
    //Remove Primary Menu Block
    $default_layout->removeBlock('13b2f325-af26-40bb-8c61-97fe1d93f19f');
    // Remove Powered By block and then replace it later. Change order of blocks.
    foreach ($default_layout->content as $block_id => $block_info) {
      if ($block_info->delta == 'powered-by') {
        $default_layout->removeBlock($block_info->uuid);
      }
    }
    // Remove breadcrumbs block.
    foreach ($default_layout->content as $block_id => $block_info) {
      if ($block_info->delta == 'breadcrumb') {
        $default_layout->removeBlock($block_info->uuid);
      }
    }

    // Remove main content block.
    foreach ($default_layout->content as $block_id => $block_info) {
      if ($block_info->delta == 'main') {
        $default_layout->removeBlock($block_info->uuid);
      }
    }

    $default_layout->addBlock('system', 'page_components:tabs', 'content');

    $default_block = $default_layout->addBlock('mini_layouts', 'footer_mini_layout', 'footer');
    $smart_block = $default_layout->addBlock('smart_blocks', 'SmartBlocksHeroBlock', 'top'); 
    $default_layout->addBlock('system', 'main', 'content'); 

       

    //Remove Title Block
    $default_layout->removeBlock('a549d0bc-51f7-46b0-9b41-653788410dd4');

    $default_layout->addBlock('views', 'testimonials-block_1', 'bottom');
    $igb2_block = $default_layout->addBlock('image_grid_block', 'about_block_on_about_page', 'bottom');
    $default_layout->addBlock('system', 'powered-by', 'footer');
    $default_layout->save();

    config_set('layout.layout.default', 'content.' . $igb2_block->uuid . '.data.settings.label', 'About Block on About Page');
    config_set('layout.layout.default', 'content.' . $igb2_block->uuid . '.data.settings.machine_name', 'about_block_on_about_page');
    config_set('layout.layout.default', 'content.' . $igb2_block->uuid . '.data.settings.title', 'About');
    config_set('layout.layout.default', 'content.' . $igb2_block->uuid . '.data.settings.title_display', 'none');
    config_set('layout.layout.default', 'content.' . $igb2_block->uuid . '.data.conditions.0.plugin', 'path');
    config_set('layout.layout.default', 'content.' . $igb2_block->uuid . '.data.conditions.0.data.settings.visibility_setting', '1');
    config_set('layout.layout.default', 'content.' . $igb2_block->uuid . '.data.conditions.0.data.settings.paths', 'about');
    config_set('layout.layout.default', 'content.' . $igb2_block->uuid . '.data.conditions.0.data.settings.load_condition_nojs', 'Load condition');

    config_set('layout.layout.default', 'content.' . $smart_block->uuid . '.data.settings.title_display', 'page_title');
    config_set('layout.layout.default', 'content.' . $smart_block->uuid . '.data.settings.image', $fids[4]);
    config_set('layout.layout.default', 'content.' . $smart_block->uuid . '.data.settings.image_path', '/files/blocks/teamwork-flamingos.png');
    config_set('layout.layout.default', 'settings.title_display', 'none');

    // Changes to Services Layout

    $services_layout = layout_load('services');
    //Remove Primary Menu Block
    $services_layout->removeBlock('268e9eab-a34e-4364-ba03-034e97e02ac7');
    $services_layout->removeBlock('9678bed0-2e71-4ec1-a907-7ec4480620b1');
    $services_block = $services_layout->addBlock('mini_layouts', 'footer_mini_layout', 'footer');
    $services_layout->addBlock('views', 'services-block_1', 'bottom');
    $services_layout->addBlock('system', 'powered-by', 'footer');
    // Remove breadcrumbs block.
    foreach ($services_layout->content as $block_id => $block_info) {
      if ($block_info->delta == 'breadcrumb') {
        $services_layout->removeBlock($block_info->uuid);
      }
    }
    $services_layout->save();

    // Changes to Projects Layout

    $project_layout = layout_load('projects');
    $project_layout->removeBlock('dd4b5376-5919-4eea-ba2b-43dc3fad208e');
    $projects_block = $project_layout->addBlock('mini_layouts', 'footer_mini_layout', 'footer');
    $project_layout->addBlock('views', 'portfolio_projects-block', 'bottom');
    $project_layout->addBlock('system', 'powered-by', 'footer');
    foreach ($project_layout->content as $block_id => $block_info) {
      if ($block_info->delta == 'breadcrumb') {
        $project_layout->removeBlock($block_info->uuid);
      }
    }
    $project_layout->save();


    // Prepping new image to use in hero block of front page.
    $field_image_dir = 'public://hero';
    file_prepare_directory($field_image_dir, FILE_CREATE_DIRECTORY);
    $image_url = BACKDROP_ROOT . '/' . $module_path . '/images/flamingo-background.webp';
    $moved_file = file_unmanaged_copy($image_url, $field_image_dir);

    $file = entity_create('file', array(
      'filename' => 'flamingo-background.webp',
      'uri' => $moved_file,
      'uid' => 1,
    ));
    $file->save();
    file_usage_add($file, 'file', 'file', $file->fid);
    $fids[] = $file->fid;


    config_set('system.core', 'site_name', 'My Digital Agency');
    config_set('layout.layout.home', 'content.9bd5a524-3670-4922-8b12-18b00a2858b9.data.settings.block_settings.menu', 'main-menu');
    config_set('layout.layout.default', 'content.84c43df4-1165-4faf-8700-c362a7153c0b.data.settings.block_settings.menu', 'main-menu');
    config_set('layout.layout.default', 'layout_template', 'boxton');
    config_set('layout.layout.home', 'layout_template', 'sutro');
    config_set('layout.layout.services', 'content.7a914d95-dd2b-4c5b-9334-52a024a529ae.data.settings.block_settings.menu', 'main-menu');

    // Changing text and image in front page hero block.
    config_set('layout.layout.home', 'content.094cbc03-d088-4b3c-8361-977733540ae8.data.settings.title', 'Digital Agency Website');
    config_set('layout.layout.home', 'content.094cbc03-d088-4b3c-8361-977733540ae8.data.settings.image_path', '/files/hero/flamingo-background.webp');
    config_set('layout.layout.home', 'content.094cbc03-d088-4b3c-8361-977733540ae8.data.settings.image', $fids[9]);
    config_set('layout.layout.home', 'content.094cbc03-d088-4b3c-8361-977733540ae8.data.settings.content', '<a class="button" href="/contact-us">Let\'s get started!</a>');
    config_set('layout.layout.home', 'content.'  . $projects_home_block->uuid . '.data.style.data.settings.classes', 'block-view');
    config_set('layout.layout.home', 'content.'  . $news_block->uuid . '.data.style.data.settings.classes', 'block-view');

    config_set('nice_menus.settings', 'nice_menus_menu_1', 'main-menu:0');
    config_set('nice_menus.settings', 'nice_menus_depth_1', '0');

    // Changing 'published on' date format for posts.
    config_set('node.type.post', 'settings.node_submitted_format', 'By [node:author], [node:created:date_only]');

    // Adding mini-layout to footer of available layouts.
    config_set('layout.layout.projects', 'content.' . $projects_block->uuid . '.data.settings.title_display', 'none');
    config_set('layout.layout.default', 'content.' . $default_block->uuid . '.data.settings.title_display', 'none');
    config_set('layout.layout.home', 'content.' . $home_block->uuid . '.data.settings.title_display', 'none');
    config_set('layout.layout.services', 'content.' . $services_block->uuid . '.data.settings.title_display', 'none');
  }
